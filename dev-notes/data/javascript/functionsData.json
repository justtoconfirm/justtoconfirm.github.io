{
  "page": {
    "pagetitle": "JavaScript Functions",
    "pageheading": "Functions",
    "pageintro": "",
    "content": [
      {
        "label": "SECTION",
        "showheading": true,
        "heading": "Declaring a function",
        "copy": [
          "We can use functions to section off small bits of logic or tasks that we can then call when we need to. Functions can help take large problems and break them into small manageable chunks that can be reused.",
          "To create a function it must first be declared using the function keyword. Declaring the function gives the function a name and specifies what the function is to do when it is called."
        ],
        "label": "CODE/MARKUP",
        "showmarkup": true,
        "rel": "js",
        "datatitle": "JS",
        "code": [
          "// Example function declaration",
          "function functionName () {",
          "",
          "   // Code is added here",
          "",
          "}"
        ]
      },
      {
        "label": "SECTION",
        "showheading": true,
        "heading": "Calling a function",
        "copy": [
          "Defining a function does not execute it. The function needs to be called for it to be used."
        ],
        "label": "CODE/MARKUP",
        "showmarkup": true,
        "rel": "js",
        "datatitle": "JS",
        "code": [
          "// Call the function",
          "functionName ();"
        ]
      },
      {
        "label": "SECTION",
        "showheading": true,
        "heading": "Return statement",
        "copy": [
          "The return statement specifies the value to be returned by the function and tells the browser to return the result so it can be made available and used outside of the function. This is necessary as any variable declared inside the function is only available within that function. This is called variable scoping."
        ],
        "label": "CODE/MARKUP",
        "showmarkup": true,
        "rel": "js",
        "datatitle": "JS",
        "code": [
          "return value;"
        ]
      },
      {
        "label": "SECTION",
        "showheading": true,
        "heading": "Parameters and Arguments",
        "copy": [
          "To pass values into a function we can use paremeters and arguments. The values are passed into the function as arguments into the parameters within the parenthesis of the function declaration.",
          "In the following example, a simple function takes two numbers as arguments and passes them into the num1 and num2 parameters. These values are then multiplied together and returned using the return statement.",
          "When we call the function, the two values we want to multiply are passed as arguments into the function."
        ],
        "label": "CODE/MARKUP",
        "showmarkup": true,
        "rel": "js",
        "datatitle": "JS",
        "code": [
          "// Declare a function with two parameters",
          "function multiplyNumbers ( num1, num2 ) {",
          "",
          "   // Return the total of num1 * num2",
          "   return num1 * num2;",
          "",
          "}",
          "",
          "// Call the function and pass two arguments",
          "multiplyNumbers ( 4, 2 );"
        ]
      },
      {
        "label": "SECTION",
        "showheading": false,
        "heading": null,
        "copy": [
          "We can also use functions to return more than one value at a time using an array.",
          "This next example calculates both the area and volume. The values are stored in two variables, before being added to an array called sizes which returns the results."
        ],
        "label": "CODE/MARKUP",
        "showmarkup": true,
        "rel": "js",
        "datatitle": "JS",
        "code": [
          "function calculateSize ( width, height, depth ) {",
          "",
          "   var area = width * height;",
          "   var volume = width * height * depth;",
          "   // Array to contain the area and volume values",
          "   var sizes = [ area, volume ];",
          "   // Return the sizes array",
          "   return sizes;",
          "",
          "}",
          "",
          "// Array index is [0] so the area will be calculated",
          "var getArea = calculateSize ( 3, 2, 5 )[0];",
          "// Array index is [1] so the volume will be calculated",
          "var getVolume = calculateSize ( 3, 2, 5 )[1];",
          "",
          "getArea;",
          "getVolume;" 
        ]
      }
    ]
  }
}