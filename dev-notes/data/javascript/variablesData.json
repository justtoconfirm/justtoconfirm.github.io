{
  "page": {
    "pagetitle": "JavaScript Variables",
    "pageheading": "Variables",
    "pageintro": "",
    "content": [
      {
        "label": "SECTION",
        "showheading": true,
        "heading": "Declaring a variable",
        "copy": [
          "A variable is a container for storing a value. To use a variable you first have to create it, or more accurately, this is called declaring a variable.",
          "To declare a variable we use the var keyword followed by the variable's name. This name is often called the identifier.",
          "When a variable is declared without any value it is an empty container. This is an undefined variable. When you enter the variable's name in the console, you should get a value of undefined returned.",
          "To assign a value to a variable - also known as initializing a value - we use the assignment operator ( = ).",
          "An error message will be returned if a variable does not exist."
        ],
        "label": "CODE/MARKUP",
        "showmarkup": true,
        "rel": "js",
        "datatitle": "JavaScript",
        "code": [
          "<span class='comment'>/** Example one **/</span>",
          "",
          "<span class='comment'>/*",
          "Declaring a variable without a value",
          "This is an undefined variable",
          "*/</span>",
          "<span class='keyword'>var</span> <span class='name'>myName</span>;",
          "<span class='name'>myName</span>;",
          "",
          "<span class='comment'>/** Example two **/</span>",
          "",
          "<span class='comment'>/*",
          "Declaring and initializing a variable",
          "Output the variable value 'Dan'",
          "*/</span>",
          "<span class='keyword'>var</span> <span class='name'>myName</span> = <span class='value'>'Dan'</span>;",
          "<span class='name'>myName</span>;",      
          "",
          "<span class='comment'>/** Example three **/</span>",
          "",
          "<span class='comment'>/*",
          "No variable has been declared",
          "Error: Uncaught ReferenceError: myAge is not defined",
          "*/</span>",
          "<span class='name'>myAge</span>;",     
          "",
          "<span class='comment'>/** Example four **/</span>",
          "",
          "<span class='comment'>// Declare and initializing multiple variables over multiple lines</span>",
          "<span class='keyword'>var</span> <span class='name'>variableOne</span> = <span class='value'>'variable one'</span>;",
          "<span class='keyword'>var</span> <span class='name'>variableTwo</span> = <span class='value'>'variable two'</span>;",
          "<span class='keyword'>var</span> <span class='name'>variableThree</span> = <span class='value'>'variable three'</span>;",
          "",
          "<span class='comment'>// Another way to declare and initializing multiple variables</span>",
          "<span class='keyword'>var</span> <span class='name'>variableOne</span> = <span class='value'>'variable one'</span>,",
          "    <span class='name'>variableTwo</span> = <span class='value'>'variable two'</span>,",
          "    <span class='name'>variableThree</span> = <span class='value'>'variable three'</span>;"        
        ]
      },
      {
        "label": "SECTION",
        "showheading": false,
        "heading": null,
        "copy": [
          "When a variable is declared outside of a function, it becomes part of the window object. The window object is supported by all browsers and represents the browser's window.",
          "This variable then becomes a global variable and is a property of the window object. By declaring variables globally conflict can occur as other parts of the JavaScript code may use the same variable name elsewhere.",
          "It is recommended to avoid polluting the global namespace and avoid having variables declared globally. It is better to declare variables within functions.",
          "You can view the window object by typing window into the console. This will output the many methods and properties - including any variables we have declared - within the console output."
        ],
        "label": "CODE/MARKUP",
        "showmarkup": true,
        "rel": "js",
        "datatitle": "JavaScript",
        "code": [
          "<span class='comment'>// Declaring and initializing a variable</span>",
          "<span class='keyword'>var</span> <span class='name'>myName</span> = <span class='value'>'Dan'</span>;",
          "",
          "<span class='comment'>/*", 
          "View the window object in the console",
          "Our myName variable will be located within the window object",
          "*/</span>",
          "<span class='keyword'>window</span>"
        ]
      },
      {
        "label": "SECTION",
        "showheading": false,
        "heading": null,
        "copy": [
          "Once a variable has been declared with a value, the value can be changed/updated by providing a new value."
        ],
        "label": "CODE/MARKUP",
        "showmarkup": true,
        "rel": "js",
        "datatitle": "JavaScript",
        "code": [
          "<span class='comment'>// Declaring and initializing a variable</span>",
          "<span class='keyword'>var</span> <span class='name'>myName</span> = <span class='value'>'Dan'</span>;",
          "<span class='comment'>// Change the value of the variable once it's declared</span>",
          "<span class='name'>myName</span> = <span class='value'>'Bob'</span>;"
        ]
      },
      {
        "label": "SECTION",
        "showheading": true,
        "heading": "Memory",
        "copy": [
          "Each variable that you declare takes up memory. The more variables a browser has to remember, the more memory your script requires to run causing performance to be slow.",
          "A variable references a value that is stored in memory. The same value can be used with more than one variable."
        ],
        "label": "CODE/MARKUP",
        "showmarkup": true,
        "rel": "js",
        "datatitle": "JavaScript",
        "code": [
          "<span class='comment'>// The same value of 'true' in memory, is being used by two variables</span>",
          "<span class='keyword'>var</span> <span class='name'>variableOne</span> = <span class='value'>'true'</span>",
          "<span class='keyword'>var</span> <span class='name'>variableTwo</span> = <span class='value'>'true'</span>"
        ]
      },
      {
        "label": "SECTION",
        "showheading": true,
        "heading": "The typeof operator",
        "copy": [
          "Unlike some other languages, you don't need to specify what data type - numbers, strings, arrays - a variable will contain. This is because JavaScript is a 'loosely typed language'.",
          "If you were to declare a variable and give it a value within quotes (double or single), the browser will treat the variable as a string. Without any quotes, the value would be a number.",
          "We can use the special operator called typeof to return the data type of the variable that you pass into it."
        ],
        "label": "CODE/MARKUP",
        "showmarkup": true,
        "rel": "js",
        "datatitle": "JavaScript",
        "code": [
          "<span class='comment'>/*", 
          "Declaring and initializing a variable",
          "The value returns a string as it's within quotation marks",
          "*/</span>",
          "<span class='keyword'>var</span> <span class='name'>myAge</span> = <span class='value'>'25'</span>;",
          "<span class='keyword'>typeof</span>(<span class='name'>myAge</span>);",
          "",
          "<span class='comment'>/*", 
          "Declaring and initializing a variable",
          "The value returns a number as it's not within quotation marks",
          "*/</span>",
          "<span class='keyword'>var</span> <span class='name'>currentYear</span> = <span class='value'>2017</span>;",
          "<span class='keyword'>typeof</span>(<span class='name'>currentYear</span>);"
        ]
      }
    ]
  }
}